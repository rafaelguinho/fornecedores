// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mvc.Context;

namespace mvc.Migrations
{
    [DbContext(typeof(FornecedoresContext))]
    [Migration("20200101161442_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("mvc.Models.Pessoas.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoPessoa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");

                    b.HasDiscriminator<string>("TipoPessoa").HasValue("Pessoa");
                });

            modelBuilder.Entity("mvc.Models.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Numero")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PessoaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("mvc.Models.Pessoas.PessoaFisica", b =>
                {
                    b.HasBaseType("mvc.Models.Pessoas.Pessoa");

                    b.Property<string>("CPF")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("RG")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Física");
                });

            modelBuilder.Entity("mvc.Models.Pessoas.PessoaJuridica", b =>
                {
                    b.HasBaseType("mvc.Models.Pessoas.Pessoa");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Jurídica");
                });

            modelBuilder.Entity("mvc.Models.FornecedorPessoaFisica", b =>
                {
                    b.HasBaseType("mvc.Models.Pessoas.PessoaFisica");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("INTEGER");

                    b.HasIndex("IdEmpresa");

                    b.HasDiscriminator().HasValue("Física fornecedor");
                });

            modelBuilder.Entity("mvc.Models.Empresa", b =>
                {
                    b.HasBaseType("mvc.Models.Pessoas.PessoaJuridica");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Jurídica empresa");
                });

            modelBuilder.Entity("mvc.Models.FornecedorPessoaJuridica", b =>
                {
                    b.HasBaseType("mvc.Models.Pessoas.PessoaJuridica");

                    b.Property<int>("IdEmpresa")
                        .HasColumnName("FornecedorPessoaJuridica_IdEmpresa")
                        .HasColumnType("INTEGER");

                    b.HasIndex("IdEmpresa");

                    b.HasDiscriminator().HasValue("Jurídica fornecedor");
                });

            modelBuilder.Entity("mvc.Models.Telefone", b =>
                {
                    b.HasOne("mvc.Models.Pessoas.Pessoa", "Pessoa")
                        .WithMany("Telefones")
                        .HasForeignKey("PessoaId");
                });

            modelBuilder.Entity("mvc.Models.FornecedorPessoaFisica", b =>
                {
                    b.HasOne("mvc.Models.Empresa", "Empresa")
                        .WithMany("FornecedoresPessoaFisica")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("mvc.Models.FornecedorPessoaJuridica", b =>
                {
                    b.HasOne("mvc.Models.Empresa", "Empresa")
                        .WithMany("FornecedoresPessoaJuridica")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
